#Basic Server instance creating for this lab is a wordpress server, the same Instance's AMI ID will be used to create the DB
Parameters:
  KeyName:
    Description: Name of an existing EC2 key pair for SSH access to the EC2 instance.
    Type: AWS::EC2::KeyPair::KeyName

  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  DBName:
    Default: wordpressdb
    Description: The WordPress database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBUser:
    NoEcho: 'true'
    Description: The WordPress database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: 'true'
    Description: The WordPress database admin account password
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  DBRootPassword:
    NoEcho: 'true'
    Description: MySQL root password
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.

  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.small
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      
Mappings:
  AWSInstanceType2Arch:
    t2.micro:
      Arch: HVM64
    t2.nano:
      Arch: HVM64
    t2.small:
      Arch: HVM64
  AWSRegionArch2AMI:
    af-south-1:
      HVM64: ami-0412806bd0f2cf75f
      HVMG2: NOT_SUPPORTED
    ap-east-1:
      HVM64: ami-0e0a21f8bd5195698
      HVMG2: NOT_SUPPORTED
    ap-northeast-1:
      HVM64: ami-0c3e3e7af817ad732
      HVMG2: NOT_SUPPORTED
    ap-northeast-2:
      HVM64: ami-0f8dbbf156e3a5cc6
      HVMG2: NOT_SUPPORTED
    ap-northeast-3:
      HVM64: ami-02a371c41f08cc499
      HVMG2: NOT_SUPPORTED
    ap-south-1:
      HVM64: ami-0f4ab3c8db917e421
      HVMG2: NOT_SUPPORTED
    ap-south-2:
      HVM64: ami-008b9c53bb1dcd29c
      HVMG2: NOT_SUPPORTED
    ap-southeast-1:
      HVM64: ami-0c3189395e5b39df7
      HVMG2: NOT_SUPPORTED
    ap-southeast-2:
      HVM64: ami-040d698318c0b1575
      HVMG2: NOT_SUPPORTED
    ap-southeast-3:
      HVM64: ami-065dcca47dde26602
      HVMG2: NOT_SUPPORTED
    ap-southeast-4:
      HVM64: ami-043e25432cf94e107
      HVMG2: NOT_SUPPORTED
    il-central-1:
      HVM64: ami-0054be7d7d9d65a1d
      HVMG2: NOT_SUPPORTED
    ca-central-1:
      HVM64: ami-05f40104305a2cdf7
      HVMG2: NOT_SUPPORTED
    cn-north-1:
      HVM64: ami-03f1e08d409b1e5fd
      HVMG2: NOT_SUPPORTED
    cn-northwest-1:
      HVM64: ami-00093746b9a0e272a
      HVMG2: NOT_SUPPORTED
    eu-central-1:
      HVM64: ami-0f454ec961da9a046
      HVMG2: NOT_SUPPORTED
    eu-north-1:
      HVM64: ami-0e78cd18c67fcf512
      HVMG2: NOT_SUPPORTED
    eu-south-1:
      HVM64: ami-07d048788725b9602
      HVMG2: NOT_SUPPORTED
    eu-west-1:
      HVM64: ami-0db5ca3e5748fb7e2
      HVMG2: NOT_SUPPORTED
    eu-west-2:
      HVM64: ami-07baf6b15b7387f24
      HVMG2: NOT_SUPPORTED
    eu-west-3:
      HVM64: ami-05a13fbd8aa57eedc
      HVMG2: NOT_SUPPORTED
    me-south-1:
      HVM64: ami-0007de3fdcaba7e44
      HVMG2: NOT_SUPPORTED
    me-central-1:
      HVM64: ami-06ce88defa3fc74ed
      HVMG2: NOT_SUPPORTED
    eu-south-2:
      HVM64: ami-051306f4e885d6de4
      HVMG2: NOT_SUPPORTED
    eu-central-2:
      HVM64: ami-0fcd532574732cb0f
      HVMG2: NOT_SUPPORTED
    sa-east-1:
      HVM64: ami-07f6e9fce0e888425
      HVMG2: NOT_SUPPORTED
    us-east-1:
      HVM64: ami-01989ebfd388ea377
      HVMG2: NOT_SUPPORTED
    us-east-2:
      HVM64: ami-0de69dde1945155da
      HVMG2: NOT_SUPPORTED
    us-west-1:
      HVM64: ami-08fe20a82dcaa1c92
      HVMG2: NOT_SUPPORTED
    us-west-2:
      HVM64: ami-05848d23360f5edfe
      HVMG2: NOT_SUPPORTED
Resources:    
  WebServer:
    Type: 'AWS::EC2::Instance'
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          wordpress_install:
            - install_cfn
            - install_wordpress
            - configure_wordpress
        install_cfn:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Join 
                - ''
                - - |
                    [main]
                  - stack=
                  - !Ref 'AWS::StackId'
                  - |+

                  - region=
                  - !Ref 'AWS::Region'
                  - |+

              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join 
                - ''
                - - |
                    [cfn-auto-reloader-hook]
                  - |
                    triggers=post.update
                  - |
                    path=Resources.WebServer.Metadata.AWS::CloudFormation::Init
                  - 'action=/opt/aws/bin/cfn-init -v '
                  - '         --stack '
                  - !Ref 'AWS::StackName'
                  - '         --resource WebServer '
                  - '         --configsets wordpress_install '
                  - '         --region '
                  - !Ref 'AWS::Region'
                  - |+

              mode: '000400'
              owner: root
              group: root
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
        install_wordpress:
          packages:
            yum:
              php73: []
              php73-mysqlnd: []
              mariadb: []
              mariadb-server: []
              mysql57-devel: []
              mysql57-libs: []
              httpd24: []
          sources:
            /var/www/html: 'http://wordpress.org/latest.tar.gz'
          files:
            /tmp/setup.mysql:
              content: !Join 
                - ''
                - - 'CREATE DATABASE '
                  - !Ref DBName
                  - |
                    ;
                  - CREATE USER '
                  - !Ref DBUser
                  - '''@''localhost'' IDENTIFIED BY '''
                  - !Ref DBPassword
                  - |
                    ';
                  - 'GRANT ALL ON '
                  - !Ref DBName
                  - .* TO '
                  - !Ref DBUser
                  - |
                    '''@''localhost'';'
                  - |
                    FLUSH PRIVILEGES;
              mode: '000400'
              owner: root
              group: root
            /tmp/create-wp-config:
              content: !Join 
                - ''
                - - |
                    #!/bin/bash -xe
                  - >
                    cp /var/www/html/wordpress/wp-config-sample.php
                    /var/www/html/wordpress/wp-config.php
                  - sed -i "s/'database_name_here'/'
                  - !Ref DBName
                  - |
                    '/g" wp-config.php
                  - sed -i "s/'username_here'/'
                  - !Ref DBUser
                  - |
                    '/g" wp-config.php
                  - sed -i "s/'password_here'/'
                  - !Ref DBPassword
                  - |
                    '/g" wp-config.php
              mode: '000500'
              owner: root
              group: root
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
              mariadb:
                enabled: 'true'
                ensureRunning: 'true'
        configure_wordpress:
          commands:
            01_set_mysql_root_password:
              command: !Join 
                - ''
                - - mysqladmin -u root password '
                  - !Ref DBRootPassword
                  - ''''
              test: !Join 
                - ''
                - - '$(mysql '
                  - !Ref DBName
                  - ' -u root --password='''
                  - !Ref DBRootPassword
                  - ''' >/dev/null 2>&1 </dev/null); (( $? != 0 ))'
            02_create_database:
              command: !Join 
                - ''
                - - mysql -u root --password='
                  - !Ref DBRootPassword
                  - ''' < /tmp/setup.mysql'
              test: !Join 
                - ''
                - - '$(mysql '
                  - !Ref DBName
                  - ' -u root --password='''
                  - !Ref DBRootPassword
                  - ''' >/dev/null 2>&1 </dev/null); (( $? != 0 ))'
            03_configure_wordpress:
              command: /tmp/create-wp-config
              cwd: /var/www/html/wordpress
    Properties:
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap 
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref WebServerSecurityGroup

      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              yum update -y aws-cfn-bootstrap
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource WebServer '
            - '         --configsets wordpress_install '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

            - '/opt/aws/bin/cfn-signal -e $? '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource WebServer '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Enable HTTP access via port 80 + SSH access"
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 80
        IpProtocol: tcp
        ToPort: 80
      - CidrIp: !Ref SSHLocation
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22

    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M        

Outputs:
  WebsiteURL:
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - WebServer
          - PublicDnsName
        - /wordpress
    Description: WordPress Website